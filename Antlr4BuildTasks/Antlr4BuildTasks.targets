<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<PropertyPageSchema Include="$(MSBuildThisFileDirectory)..\build\Antlr4BuildTasks.xml">
			<Context>File;BrowseObject;Project</Context>
		</PropertyPageSchema>
		<AvailableItemName Include="Antlr4">
			<Targets>Antlr4Compile</Targets>
		</AvailableItemName>
	</ItemGroup>

	<PropertyGroup>
		<MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
	</PropertyGroup>

	<PropertyGroup>
		<BuildSystem>MSBuild</BuildSystem>
		<TaskVersion>4.0.0.0</TaskVersion>
		<TaskKeyToken>eb42632606e9261f</TaskKeyToken>
		<Antlr4BuildTaskAssemblyName Condition="'$(Antlr4BuildTaskAssemblyName)'==''">Antlr4BuildTasks, Version=$(TaskVersion), Culture=neutral, PublicKeyToken=$(TaskKeyToken)</Antlr4BuildTaskAssemblyName>
	</PropertyGroup>

	<PropertyGroup>
		<LoadTimeSensitiveTargets>
			$(LoadTimeSensitiveTargets);
			Antlr4Compile;
		</LoadTimeSensitiveTargets>
		<LoadTimeSensitiveProperties>
			$(LoadTimeSensitiveProperties);
			Antlr4CompileDependsOn;
		</LoadTimeSensitiveProperties>
	</PropertyGroup>

	<PropertyGroup>
		<Antlr4BuildTaskLocation Condition="'$(Antlr4BuildTaskPath)'==''">$(MSBuildBinPath)</Antlr4BuildTaskLocation>
		<Antlr4BuildTaskLocation Condition="'$(Antlr4BuildTaskPath)'!=''">$(Antlr4BuildTaskPath)</Antlr4BuildTaskLocation>
		<Antlr4ToolLocation Condition="'$(Antlr4ToolPath)'==''">NOT_SET_IN_ENV</Antlr4ToolLocation>
		<Antlr4ToolLocation Condition="'$(Antlr4ToolPath)'!=''">$(Antlr4ToolPath)</Antlr4ToolLocation>
		<Antlr4JavaHome Condition="'$(JAVA_EXEC)'==''">NOT_SET_IN_ENV</Antlr4JavaHome>
		<Antlr4JavaHome Condition="'$(JAVA_EXEC)'!=''">$(JAVA_EXEC)</Antlr4JavaHome>
		<Antlr4JavaVendor Condition="'$(Antlr4JavaVendor)'==''">JavaSoft</Antlr4JavaVendor>
		<Antlr4JavaInstallation Condition="'$(Antlr4JavaInstallation)'==''">Java Runtime Environment</Antlr4JavaInstallation>
	</PropertyGroup>

	<PropertyGroup>
		<Antlr4ToCompileListFile Condition="'$(Antlr4ToCompileListFile)'==''">$(IntermediateOutputPath)$(MSBuildProjectFile).AntlrToCompileList.txt</Antlr4ToCompileListFile>
		<Antlr4AllListFile Condition="'$(Antlr4AllListFile)'==''">$(IntermediateOutputPath)$(MSBuildProjectFile).AntlrAllList.txt</Antlr4AllListFile>
	</PropertyGroup>

	<UsingTask Condition="'$(Antlr4BuildTaskPath)'!=''"
		TaskName="Antlr4.Build.Tasks.Antlr4ClassGenerationTask"
		AssemblyFile="$(Antlr4BuildTaskPath)\Antlr4BuildTasks.dll" />

	<PropertyGroup>
		<BuildDependsOn>
			Antlr4Compile;
			Antlr4CompileAddFilesGenerated;
			$(BuildDependsOn)
		</BuildDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<CoreCompileDependsOn>
			Antlr4Compile;
			Antlr4CompileAddFilesGenerated;
			$(CoreCompileDependsOn)
		</CoreCompileDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<Antlr4CompileDependsOn>
			Antlr4CompileReadGeneratedFileList
		</Antlr4CompileDependsOn>
	</PropertyGroup>

	<!-- These are the defaults for the XML properties of the Antlr grammar file.
	  -->
	<ItemDefinitionGroup>
		<Antlr4>
			<Generator>MSBuild:Compile</Generator>
			<LibPath></LibPath>
			<AntOutDir>$(ProjectDir)</AntOutDir>
			<GAtn>false</GAtn>
			<Encoding>UTF-8</Encoding>
			<Listener>true</Listener>
			<Visitor>true</Visitor>
			<Package></Package>
			<DOptions>language=CSharp</DOptions>
			<Error>false</Error>
			<ForceAtn>false</ForceAtn>
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Antlr4>
	</ItemDefinitionGroup>


	<!-- This is the main Antlr tool calling method. The result of the
	     tool is are generated files, and from this target, two files that
		 list out all the files generated. After this is done, the files
		 need to be read and then added to the build. -->
	<Target Name="Antlr4Compile"
			DependsOnTargets="$(Antlr4CompileDependsOn)"
			Condition="'@(Antlr4)' != ''"
			Inputs="@(Antlr4);@(Antlr4Tokens)"
			Outputs="$(Antlr4ToCompileListFile);$(Antlr4AllListFile)">

		<Message Text="Running the Antlr Tool over the grammar files @(Antlr4)"/>

		<Antlr4ClassGenerationTask
		  ToolPath="$(Antlr4ToolLocation)"
		  JavaHome="$(Antlr4JavaHome)"
		  JavaVendor="$(Antlr4JavaVendor)"
		  JavaInstallation="$(Antlr4JavaInstallation)"
		  JavaExecutable="$(Antlr4JavaExecutable)"
		  BuildTaskPath="$(Antlr4BuildTaskLocation)"
		  OutputPath="%(Antlr4.AntOutDir)"
		  LibPath="%(Antlr4.LibPath)"
		  GAtn="%(Antlr4.GAtn)"
		  Encoding="%(Antlr4.Encoding)"
		  Listener="%(Antlr4.Listener)"
		  Visitor="%(Antlr4.Visitor)"
		  Package="%(Antlr4.Package)"
		  DOptions="%(Antlr4.DOptions)"
		  Error="%(Antlr4.Error)"
		  ForceAtn="%(Antlr4.ForceAtn)"
		  TargetFrameworkVersion="$(TargetFrameworkVersion)"
		  SourceCodeFiles="@(Antlr4 -> '%(FullPath)')"
		  ContinueOnError="false"
		  TokensFiles="@(Antlr4Tokens)">
			<Output ItemName="ToCompileFiles" TaskParameter="GeneratedCodeFiles" />
			<Output ItemName="AllFiles" TaskParameter="AllGeneratedFiles" />
		</Antlr4ClassGenerationTask>

		<Message Text="This is the ToCompileFiles list @(ToCompileFiles)"/>
		<Message Text="This is the AllFiles list @(AllFiles)"/>
		<Message Text="Writing out these lists." />
		<WriteLinesToFile
		  File="$(Antlr4ToCompileListFile)"
		  Lines="@(ToCompileFiles)"
		  Overwrite="true"/>
		<WriteLinesToFile
		  File="$(Antlr4AllListFile)"
		  Lines="@(AllFiles)"
		  Overwrite="true"/>

	</Target>

	<!-- As noted in https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/february/msbuild-best-practices-for-creating-reliable-builds-part-1#id0090093
		     a list of generated files can be added to the item list "FilesWrite", but
			 "[f]iles to be deleted must reside under the output path, and you must 
			 append items to that list before the clean cache is written to disk,
			 which occurs in either the Clean or IncrementalClean target, depending 
			 on the type of build that is executed." Therefore, we can't use this method.
			 
			 Instead, inject into CleanDependsOn a custom clean step. This target will
			 read the code gen list from Antlr, and delete all files. Note that the files
			 in the list must be exact, no wildcards.
			 -->
	<PropertyGroup>
		<CleanDependsOn> CustomBeforeClean; $(CleanDependsOn)</CleanDependsOn>
	</PropertyGroup>
	<Target Name="CustomBeforeClean">
		<Message Text="CustomBeforeClean target executed"/>
		<Message Text="Removing files listed in $(Antlr4AllListFile)"/>
		<ReadLinesFromFile File="$(Antlr4AllListFile)">
			<Output TaskParameter="Lines" ItemName="ToRemove" />
		</ReadLinesFromFile>
		<Message Text="Going to delete @(ToRemove)"/>
		<Delete Files="@(ToRemove)" TreatErrorsAsWarnings="false" />
		<Message Text="Removing file $(Antlr4AllListFile)"/>
		<Delete Files="$(Antlr4AllListFile)" TreatErrorsAsWarnings="false" />
		<Message Text="Removing file $(Antlr4ToCompileListFile)"/>
		<Delete Files="$(Antlr4ToCompileListFile)" TreatErrorsAsWarnings="false" />
	</Target>
	
	
	<!-- Compilation of the project depends on reading the list of .cs files
	     generated by the Antlr Tool. This target reads the file, and sets
		 compiles. -->
	<Target Name="Antlr4CompileAddFilesGenerated"
		Condition="Exists($(Antlr4ToCompileListFile))">
		<Message Text="Reading the list of files generated from the Antlr Tool."/>
		<ItemGroup>
			<ToCompileFiles Remove="@(ToCompileFiles)"/>
		</ItemGroup>

		<ReadLinesFromFile
			File="$(Antlr4ToCompileListFile)">
			<Output
				TaskParameter="Lines"
				ItemName="ToCompileFiles"/>
		</ReadLinesFromFile>

		<Message Text="This is the ToCompileFiles list @(ToCompileFiles)"/>

		<RemoveDuplicates
		  Inputs="@(ToCompileFiles)">
			<Output TaskParameter="Filtered" ItemName="FilteredItems" />
		</RemoveDuplicates>

		<Message Text="== @(FilteredItems) ==" />

		<ItemGroup>
			<PathsRelativeToBar Include="@(FilteredItems)">
				<!-- Here is the magic... we're adding a piece of metadata with the relative path -->
				<RelativePath>$([MSBuild]::MakeRelative($(ProjectDir), %(ToCompileFiles.FullPath)))</RelativePath>
			</PathsRelativeToBar>
		</ItemGroup>

		<Message Text="----- Absolute paths -----" />
		<Message Text="== %(FilteredItems.FullPath) ==" />
		<Message Text="----- Relative paths (showing full path) -----" />
		<Message Text="== %(PathsRelativeToBar.FullPath) ==" />
		<Message Text="----- Relative paths (relative to $(ProjectDir)) -----" />
		<Message Text="== %(PathsRelativeToBar.RelativePath) ==" />
		<Message Text="xxxx @(PathsRelativeToBar.RelativePath) xxxx" />

		<ItemGroup>
			<Compile Include="%(PathsRelativeToBar.RelativePath)"/>
			<CompileDesignTime Include="%(PathsRelativeToBar.RelativePath)"/>
			<_GeneratedCodeFiles Include="%(PathsRelativeToBar.RelativePath)" />
		</ItemGroup>
	</Target>
	
	<!--	AfterTargets="ResolveAssemblyReferencesDesignTime;ResolveProjectReferencesDesignTime;ResolveComReferencesDesignTime;ResolveFrameworkReferencesDesignTime;ResolvePackageDependenciesDesignTime;CompileDesignTime" -->

	<Target Name="Antlr4CompileReadGeneratedFileList"
			Condition="Exists($(Antlr4ToCompileListFile))"
			Outputs="@(ToCompileFiles);">
		<ReadLinesFromFile
			File="$(Antlr4ToCompileListFile)">
			<Output
				TaskParameter="Lines"
				ItemName="ToCompileFiles"/>
		</ReadLinesFromFile>
	</Target>

</Project>
